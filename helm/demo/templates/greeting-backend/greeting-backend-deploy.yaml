{{- if .Values.greetingservice.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.greetingservice.image.name }}
  labels:
    app.kubernetes.io/name: {{ include "demo.chart" . }}
    helm.sh/chart: {{ include "demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.greetingservice.image.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "demo.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: {{.Values.greetingservice.image.name}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "demo.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: {{.Values.greetingservice.image.name}}
    spec:
      imagePullSecrets:
        - name: {{ .Values.greetingservice.imagePullSecrets }}
      securityContext: {}
      volumes:
        - name: {{ .Values.greetingservice.config.name }}
          configMap:
            name: {{ .Values.greetingservice.config.name }}
            items:
              - key: application.properties
                path: application.properties
      initContainers:
        - name: wait-container
          image: alpine:3
          command: ['/bin/sh', '-c', 'sleep 20']
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.greetingservice.image.repository }}:{{ .Values.greetingservice.image.tag }}"
          imagePullPolicy: {{ .Values.greetingservice.image.pullPolicy }}
          ports:
            - name: "http"
              containerPort: {{ .Values.greetingservice.service.port }}
          volumeMounts:
            - name: {{ .Values.greetingservice.config.name }}
              mountPath: "/home/config"
              readOnly: true
          env:
          - name: DSPRING_DATASOURCE_USERNAME
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: db-username
          - name: DSPRING_DATASOURCE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secrets
                key: db-password
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
{{- end}}
